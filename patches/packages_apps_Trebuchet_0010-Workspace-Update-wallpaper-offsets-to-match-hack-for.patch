From 74773001d819158afc13bf962c39d67464ac11ac Mon Sep 17 00:00:00 2001
From: Erwin Pannecoucke <erwin.pannecoucke@gmail.com>
Date: Sat, 29 Dec 2012 23:08:47 +0100
Subject: [PATCH] Workspace: Update wallpaper offsets to match hack for recent
 apps window http://review.cyanogenmod.org/#/c/27549/

Change-Id: I3179ce9626b80316b290de7125ac2f6c2d189691
---
 src/com/cyanogenmod/trebuchet/Workspace.java |   82 +++++++++++---------------
 1 file changed, 33 insertions(+), 49 deletions(-)

diff --git a/src/com/cyanogenmod/trebuchet/Workspace.java b/src/com/cyanogenmod/trebuchet/Workspace.java
index 3770ea6..ad0f65e 100644
--- a/src/com/cyanogenmod/trebuchet/Workspace.java
+++ b/src/com/cyanogenmod/trebuchet/Workspace.java
@@ -121,8 +121,7 @@ public class Workspace extends PagedView
     private final WallpaperManager mWallpaperManager;
     private boolean mWallpaperHack;
     private Bitmap mWallpaperBitmap;
-    private float mWallpaperScrollX;
-    private float mWallpaperScrollY;
+    private float mWallpaperScroll;
     private int[] mWallpaperOffsets = new int[2];
     private Paint mPaint = new Paint();
     private IBinder mWindowToken;
@@ -176,6 +175,8 @@ public class Workspace extends PagedView
     boolean mIsDragOccuring = false;
     boolean mChildrenLayersEnabled = true;
 
+    private boolean mIsLandscape;
+
     /** Is the user is dragging an item near the edge of a page? */
     private boolean mInScrollArea = false;
 
@@ -197,7 +198,7 @@ public class Workspace extends PagedView
     enum WallpaperVerticalOffset { TOP, MIDDLE, BOTTOM };
     int mWallpaperWidth;
     int mWallpaperHeight;
-    WallpaperOffsetInterpolator mWallpaperOffset;
+    WallpaperOffsetInterpolator mWallpaperInterpolator;
     boolean mUpdateWallpaperOffsetImmediately = false;
     private Runnable mDelayedResizeRunnable;
     private int mDisplayWidth;
@@ -512,7 +513,7 @@ public class Workspace extends PagedView
             public void onAnimationEnd(Animator animation) {
                 mIsSwitchingState = false;
                 if (mScrollWallpaper) {
-                    mWallpaperOffset.setOverrideHorizontalCatchupConstant(false);
+                    mWallpaperInterpolator.setOverrideHorizontalCatchupConstant(false);
                 }
                 mAnimator = null;
                 updateChildrenLayersEnabled();
@@ -520,6 +521,7 @@ public class Workspace extends PagedView
         };
 
         mSnapVelocity = 100;
+        mWallpaperInterpolator = new WallpaperOffsetInterpolator();
         Display display = mLauncher.getWindowManager().getDefaultDisplay();
         mDisplayWidth = display.getWidth();
         mDisplayHeight = display.getHeight();
@@ -852,6 +854,14 @@ public class Workspace extends PagedView
             mDelayedResizeRunnable.run();
             mDelayedResizeRunnable = null;
         }
+
+        // Update wallpaper offsets to match hack (for recent apps window)
+        if (mWallpaperHack && mWallpaperBitmap != null) {
+            mLauncher.setWallpaperVisibility(true);
+            mWallpaperManager.setWallpaperOffsetSteps(1.0f / (getChildCount() - 1), 1.0f);
+            mWallpaperManager.setWallpaperOffsets(mWindowToken, mWallpaperScroll, 0);
+            mLauncher.setWallpaperVisibility(false);
+        }
     }
 
     @Override
@@ -974,9 +984,8 @@ public class Workspace extends PagedView
     }
 
     private void centerWallpaperOffset() {
-        if (mWallpaperHack) {
-           mWallpaperScrollX = 0.5f;
-        } else {
+        mWallpaperScroll = 0.5f;
+        if (!mWallpaperHack && mWindowToken != null) {
            mWallpaperManager.setWallpaperOffsetSteps(0.5f, 0);
            mWallpaperManager.setWallpaperOffsets(getWindowToken(), 0.5f, 0);
         }
@@ -992,18 +1001,15 @@ public class Workspace extends PagedView
         if (mUpdateWallpaperOffsetImmediately) {
             updateNow = true;
             keepUpdating = false;
-            mWallpaperOffset.jumpToFinal();
+            mWallpaperInterpolator.jumpToFinal();
             mUpdateWallpaperOffsetImmediately = false;
         } else {
-            updateNow = keepUpdating = mWallpaperOffset.computeScrollOffset();
+            updateNow = keepUpdating = mWallpaperInterpolator.computeScrollOffset();
         }
         if (updateNow) {
-            if (mWallpaperHack) {
-                mWallpaperScrollX = mWallpaperOffset.getCurrX();
-                mWallpaperScrollY = mWallpaperOffset.getCurrY();
-            } else if (mWindowToken != null) {
-                mWallpaperManager.setWallpaperOffsets(mWindowToken,
-                        mWallpaperOffset.getCurrX(), mWallpaperOffset.getCurrY());
+            mWallpaperScroll = mWallpaperInterpolator.getCurrX();
+            if (!mWallpaperHack && mWindowToken != null) {
+                mWallpaperManager.setWallpaperOffsets(mWindowToken, mWallpaperScroll, 0);
             }
         }
         if (keepUpdating) {
@@ -1045,14 +1051,11 @@ public class Workspace extends PagedView
 
     class WallpaperOffsetInterpolator {
         float mFinalHorizontalWallpaperOffset = 0.0f;
-        float mFinalVerticalWallpaperOffset = 0.0f;
         float mHorizontalWallpaperOffset = 0.0f;
-        float mVerticalWallpaperOffset = 0.0f;
         long mLastWallpaperOffsetUpdateTime;
         boolean mIsMovingFast;
         boolean mOverrideHorizontalCatchupConstant;
         float mHorizontalCatchupConstant = 0.35f;
-        float mVerticalCatchupConstant = 0.35f;
 
         public WallpaperOffsetInterpolator() {
         }
@@ -1065,13 +1068,8 @@ public class Workspace extends PagedView
             mHorizontalCatchupConstant = f;
         }
 
-        public void setVerticalCatchupConstant(float f) {
-            mVerticalCatchupConstant = f;
-        }
-
         public boolean computeScrollOffset() {
-            if (Float.compare(mHorizontalWallpaperOffset, mFinalHorizontalWallpaperOffset) == 0 &&
-                    Float.compare(mVerticalWallpaperOffset, mFinalVerticalWallpaperOffset) == 0) {
+            if (Float.compare(mHorizontalWallpaperOffset, mFinalHorizontalWallpaperOffset) == 0) {
                 mIsMovingFast = false;
                 return false;
             }
@@ -1096,28 +1094,20 @@ public class Workspace extends PagedView
                 // slow
                 fractionToCatchUpIn1MsHorizontal = isLandscape ? 0.27f : 0.5f;
             }
-            float fractionToCatchUpIn1MsVertical = mVerticalCatchupConstant;
 
             fractionToCatchUpIn1MsHorizontal /= 33f;
-            fractionToCatchUpIn1MsVertical /= 33f;
 
             final float UPDATE_THRESHOLD = 0.00001f;
             float hOffsetDelta = mFinalHorizontalWallpaperOffset - mHorizontalWallpaperOffset;
-            float vOffsetDelta = mFinalVerticalWallpaperOffset - mVerticalWallpaperOffset;
-            boolean jumpToFinalValue = Math.abs(hOffsetDelta) < UPDATE_THRESHOLD &&
-                Math.abs(vOffsetDelta) < UPDATE_THRESHOLD;
+            boolean jumpToFinalValue = Math.abs(hOffsetDelta) < UPDATE_THRESHOLD;
 
             // Don't have any lag between workspace and wallpaper on non-large devices
             if (!LauncherApplication.isScreenLarge() || jumpToFinalValue) {
                 mHorizontalWallpaperOffset = mFinalHorizontalWallpaperOffset;
-                mVerticalWallpaperOffset = mFinalVerticalWallpaperOffset;
             } else {
-                float percentToCatchUpVertical =
-                    Math.min(1.0f, timeSinceLastUpdate * fractionToCatchUpIn1MsVertical);
                 float percentToCatchUpHorizontal =
                     Math.min(1.0f, timeSinceLastUpdate * fractionToCatchUpIn1MsHorizontal);
                 mHorizontalWallpaperOffset += percentToCatchUpHorizontal * hOffsetDelta;
-                mVerticalWallpaperOffset += percentToCatchUpVertical * vOffsetDelta;
             }
 
             mLastWallpaperOffsetUpdateTime = System.currentTimeMillis();
@@ -1132,25 +1122,12 @@ public class Workspace extends PagedView
             return mFinalHorizontalWallpaperOffset;
         }
 
-        public float getCurrY() {
-            return mVerticalWallpaperOffset;
-        }
-
-        public float getFinalY() {
-            return mFinalVerticalWallpaperOffset;
-        }
-
         public void setFinalX(float x) {
             mFinalHorizontalWallpaperOffset = Math.max(0f, Math.min(x, 1.0f));
         }
 
-        public void setFinalY(float y) {
-            mFinalVerticalWallpaperOffset = Math.max(0f, Math.min(y, 1.0f));
-        }
-
         public void jumpToFinal() {
             mHorizontalWallpaperOffset = mFinalHorizontalWallpaperOffset;
-            mVerticalWallpaperOffset = mFinalVerticalWallpaperOffset;
         }
     }
 
@@ -1608,13 +1585,17 @@ public class Workspace extends PagedView
                 // Wallpaper is smaller than screen
                 x += (width - wallpaperWidth) / 2;
             } else {
-                x -= mWallpaperScrollX * (wallpaperWidth - width) + mWallpaperOffsets[0];
+                x -= mWallpaperScroll * (wallpaperWidth - (width + mWallpaperOffsets[0])) + mWallpaperOffsets[0];
             }
-            if (height + mWallpaperOffsets[1] > wallpaperHeight) {
+            if (height + mWallpaperOffsets[0] > wallpaperHeight) {
                 // Wallpaper is smaller than screen
                 y += (height - wallpaperHeight) / 2;
             } else {
-                y -= mWallpaperScrollY * (wallpaperHeight - height) + mWallpaperOffsets[1];
+                if (!mIsLandscape) {
+                    y -= mWallpaperOffsets[1];
+                } else {
+                    y -= (wallpaperHeight - (height - mWallpaperOffsets[1])) / 2 - mWallpaperOffsets[1];
+                }
             }
 
             canvas.drawBitmap(mWallpaperBitmap, x, y, mPaint);
@@ -3563,6 +3544,9 @@ public class Workspace extends PagedView
         if (!mScrollWallpaper) {
             centerWallpaperOffset();
         }
+
+       mIsLandscape = LauncherApplication.isScreenLandscape(mLauncher);
+
     }
 
     /**
-- 
1.7.9.5

